# Generated by Django 4.2.18 on 2025-02-17 09:37

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('national_id', models.CharField(blank=True, help_text='Enter your National ID number', max_length=255, null=True, unique=True, verbose_name='National ID')),
                ('profession', models.CharField(blank=True, help_text='Enter your profession', max_length=255, null=True, verbose_name='Profession')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'ordering': ['username'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('account_type', models.CharField(choices=[('Asset', 'Asset'), ('Liability', 'Liability'), ('Equity', 'Equity'), ('Revenue', 'Revenue'), ('Expense', 'Expense')], max_length=20)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CompanyClearance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('profession', models.CharField(max_length=100)),
                ('national_id_or_iqama_no', models.CharField(max_length=100)),
                ('department', models.CharField(blank=True, max_length=100, null=True)),
                ('today_date', models.DateField(auto_now_add=True)),
                ('last_day_of_work', models.DateField()),
                ('leaving_reason', models.CharField(choices=[('Vacation', 'Vacation'), ('Final Leave', 'Final Leave')], max_length=50)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Approved', 'Approved'), ('Rejected', 'Rejected')], default='Pending', max_length=50)),
                ('notes', models.TextField(blank=True, null=True)),
                ('is_locked', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='CompanySettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('name_en', models.CharField(max_length=255, null=True)),
                ('name_ar', models.CharField(max_length=255, null=True)),
                ('logo', models.ImageField(upload_to='logos/')),
            ],
        ),
        migrations.CreateModel(
            name='Contractor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('gov_registration_number', models.CharField(max_length=100)),
                ('tax_number', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('phone_number', models.CharField(max_length=15)),
                ('address', models.TextField()),
                ('contracts_attachment', models.FileField(upload_to='contracts/')),
                ('quantity_of_contracts', models.IntegerField()),
                ('contractor_statement_invoices', models.TextField()),
                ('paid', models.DecimalField(decimal_places=2, max_digits=10)),
                ('not_paid', models.DecimalField(decimal_places=2, max_digits=10)),
                ('specify_which_contract_not_paid', models.TextField()),
                ('total', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='CRMCustomer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('phone_number', models.CharField(max_length=15)),
                ('address', models.TextField()),
                ('notes', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='FinancialWarehouse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_no', models.IntegerField(editable=False, unique=True)),
                ('item_name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('date_received', models.DateField()),
                ('expiry_date', models.DateField()),
                ('date_leave', models.DateField(blank=True, null=True)),
                ('storing_location', models.CharField(max_length=255)),
                ('quantity', models.IntegerField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('vat_percentage', models.DecimalField(decimal_places=2, default=15.0, max_digits=5)),
                ('total_vat', models.DecimalField(decimal_places=2, editable=False, max_digits=10)),
                ('total_price', models.DecimalField(decimal_places=2, editable=False, max_digits=10)),
                ('net_price', models.DecimalField(decimal_places=2, editable=False, max_digits=10)),
                ('serial_number', models.CharField(blank=True, max_length=255, null=True)),
                ('buying_receipt', models.FileField(blank=True, null=True, upload_to='financial_warehouse/buying_receipts/')),
                ('receiving_receipt', models.FileField(blank=True, null=True, upload_to='financial_warehouse/receiving_receipts/')),
                ('delivery_certificate', models.FileField(blank=True, null=True, upload_to='financial_warehouse/delivery_certificates/')),
                ('item_photo', models.ImageField(blank=True, null=True, upload_to='financial_warehouse/item_photos/')),
                ('property_photo', models.ImageField(blank=True, null=True, upload_to='financial_warehouse/property_photos/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_taken', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_items', to=settings.AUTH_USER_MODEL)),
                ('item_with', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='items_with', to=settings.AUTH_USER_MODEL)),
                ('received_from', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='items_received_from', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='JournalEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('name_en', models.CharField(max_length=255, null=True)),
                ('name_ar', models.CharField(max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RequestType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='request_types', to='core.department')),
            ],
        ),
        migrations.CreateModel(
            name='SubRequestType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('main_request_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sub_request_types', to='core.requesttype')),
            ],
        ),
        migrations.CreateModel(
            name='Workshop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('date', models.DateField()),
                ('description', models.TextField()),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('title_en', models.CharField(max_length=255, null=True)),
                ('title_ar', models.CharField(max_length=255, null=True)),
                ('description', models.TextField()),
                ('description_en', models.TextField(null=True)),
                ('description_ar', models.TextField(null=True)),
                ('status', models.CharField(choices=[('submitted', 'Submitted'), ('open', 'Open'), ('in_progress', 'In Progress'), ('Accepted', 'Accepted'), ('rejected', 'Rejected'), ('canceled', 'Canceled')], default='open', max_length=255)),
                ('attachment', models.FileField(blank=True, null=True, upload_to='attachments/')),
                ('attachment_en', models.FileField(blank=True, null=True, upload_to='attachments/')),
                ('attachment_ar', models.FileField(blank=True, null=True, upload_to='attachments/')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('applied_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applied_tickets', to=settings.AUTH_USER_MODEL)),
                ('applied_for', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assigned_tickets', to=settings.AUTH_USER_MODEL)),
                ('applied_for_ar', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assigned_tickets', to=settings.AUTH_USER_MODEL)),
                ('applied_for_en', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assigned_tickets', to=settings.AUTH_USER_MODEL)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assigned_to_tickets', to=settings.AUTH_USER_MODEL)),
                ('assigned_to_ar', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assigned_to_tickets', to=settings.AUTH_USER_MODEL)),
                ('assigned_to_en', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assigned_to_tickets', to=settings.AUTH_USER_MODEL)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.department')),
                ('department_ar', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.department')),
                ('department_en', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.department')),
                ('request_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.requesttype')),
                ('request_type_ar', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.requesttype')),
                ('request_type_en', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.requesttype')),
                ('sub_request_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.subrequesttype')),
                ('sub_request_type_ar', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.subrequesttype')),
                ('sub_request_type_en', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.subrequesttype')),
            ],
        ),
        migrations.CreateModel(
            name='TechnicalOfficeStorage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('no', models.CharField(max_length=100)),
                ('file_type', models.CharField(choices=[('Request of Mir', 'Request of Mir'), ('Request of WiR', 'Request of WiR'), ('Appling for Code', 'Appling for Code')], max_length=50)),
                ('file_name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('location', models.CharField(max_length=255)),
                ('date_applied', models.DateTimeField()),
                ('date_receiving_apply', models.DateTimeField()),
                ('code', models.CharField(choices=[('A+', 'A+'), ('A', 'A'), ('A-', 'A-'), ('B+', 'B+'), ('B', 'B'), ('B-', 'B-'), ('C', 'C'), ('D', 'D')], max_length=2)),
                ('notes_for_approval_or_rejection', models.TextField(blank=True, null=True)),
                ('attachment', models.FileField(upload_to='technical_office_attachments/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SubPosition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('name_en', models.CharField(max_length=100, null=True)),
                ('name_ar', models.CharField(max_length=100, null=True)),
                ('main_position', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sub_positions', to='core.position')),
            ],
        ),
        migrations.CreateModel(
            name='StartWorkPermit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profession', models.CharField(blank=True, max_length=100, null=True)),
                ('start_date', models.DateField()),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Approved', 'Approved'), ('Rejected', 'Rejected')], default='Pending', max_length=50)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_work_permits', to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Signature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='signatures/')),
                ('name', models.CharField(max_length=255)),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='signatures', to='core.ticket')),
            ],
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_name', models.CharField(max_length=255)),
                ('quantity', models.PositiveIntegerField()),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_price', models.DecimalField(decimal_places=2, editable=False, max_digits=10)),
                ('customer', models.CharField(blank=True, max_length=255, null=True)),
                ('sale_date', models.DateField(default=django.utils.timezone.now)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Salary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('date_issued', models.DateField(default=django.utils.timezone.now)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('name_en', models.CharField(max_length=255, null=True, unique=True)),
                ('name_ar', models.CharField(max_length=255, null=True, unique=True)),
                ('permissions', models.ManyToManyField(blank=True, to='auth.permission')),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('report_type', models.CharField(choices=[('tickets', 'Tickets'), ('it_requests', 'IT Requests'), ('it_warehouse', 'IT Warehouse'), ('hr_warehouse', 'Cars and Heavy Equipment'), ('administrative', 'Administrative Requests'), ('financial', 'Financial Warehouse'), ('clearance', 'Company Clearance'), ('work_permit', 'Work Permit')], max_length=50)),
                ('period', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('yearly', 'Yearly')], max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('filters', models.JSONField(blank=True, default=dict)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MyPossession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('no', models.CharField(max_length=50)),
                ('item_type', models.CharField(max_length=100)),
                ('quantity', models.PositiveIntegerField()),
                ('date_received', models.DateField()),
                ('date_returned', models.DateField(blank=True, null=True)),
                ('attachment_paper', models.FileField(blank=True, null=True, upload_to='attachments/')),
                ('attachment_item_condition', models.FileField(blank=True, null=True, upload_to='attachments/')),
                ('status', models.CharField(max_length=50)),
                ('signature_of_receiving', models.ImageField(blank=True, null=True, upload_to='signatures/')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_possessions', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='possessions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='JournalEntryLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('debit', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('credit', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.account')),
                ('journal_entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lines', to='core.journalentry')),
            ],
        ),
        migrations.CreateModel(
            name='ITWarehouse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_no', models.CharField(editable=False, max_length=100, unique=True)),
                ('item_type', models.CharField(choices=[('Sim Card', 'Sim Card'), ('Router', 'Router'), ('Switch', 'Switch'), ('Wifi Access Point', 'Wifi Access Point'), ('CCTV', 'CCTV'), ('NVR', 'NVR'), ('DVR', 'DVR'), ('Normal Camera', 'Normal Camera'), ('Hard Disk or SSD External', 'Hard Disk or SSD External'), ('Laptop', 'Laptop'), ('PC', 'PC'), ('PC AIO', 'PC AIO'), ('Drone', 'Drone'), ('Monitor', 'Monitor'), ('Other', 'Other')], max_length=50)),
                ('item_model_name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('specifications', models.TextField()),
                ('condition', models.CharField(choices=[('New', 'New'), ('Used', 'Used')], max_length=4)),
                ('quantity', models.PositiveIntegerField()),
                ('serial_number', models.CharField(blank=True, max_length=255, null=True)),
                ('date_given', models.DateTimeField()),
                ('date_received', models.DateTimeField(blank=True, null=True)),
                ('attachments', models.FileField(blank=True, null=True, upload_to='it_warehouse_attachments/')),
                ('signature_holder', models.ImageField(blank=True, null=True, upload_to='signatures/')),
                ('signature_department_manager', models.ImageField(blank=True, null=True, upload_to='signatures/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('given_by_name', models.CharField(blank=True, max_length=255, null=True)),
                ('item_with_name', models.CharField(blank=True, max_length=255, null=True)),
                ('created_by', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('given_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='given_by', to=settings.AUTH_USER_MODEL)),
                ('item_with', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='item_with', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ITRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_no', models.CharField(editable=False, max_length=100, unique=True)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('it_request_type', models.CharField(choices=[('Checkup', 'Checkup'), ('PC', 'PC'), ('Laptop', 'Laptop'), ('Monitor', 'Monitor'), ('Camera', 'Camera'), ('Internet', 'Internet'), ('Network Devices', 'Network Devices'), ('Servers', 'Servers'), ('Software', 'Software'), ('Hardware', 'Hardware'), ('Cable Termination', 'Cable Termination'), ('Biometric Devices', 'Biometric Devices'), ('Fingerprint Attendance Devices', 'Fingerprint Attendance Devices'), ('ERP Accountant System', 'ERP Accountant System'), ('Cloud Storage', 'Cloud Storage'), ('Phone', 'Phone'), ('New Design Cabling and Termination', 'New Design Cabling and Termination'), ('Security Devices', 'Security Devices'), ('New Project Related IT Consulting and Calculations', 'New Project Related IT Consulting and Calculations'), ('Annual IT Department Costs', 'Annual IT Department Costs'), ('Personal Requests', 'Personal Requests')], max_length=100)),
                ('name', models.CharField(max_length=255)),
                ('date_applied', models.DateField(default=django.utils.timezone.now, editable=False)),
                ('priority', models.CharField(choices=[('Low', 'Low'), ('Medium', 'Medium'), ('High', 'High')], max_length=100)),
                ('notes', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('Open', 'Open'), ('In Progress', 'In Progress'), ('Completed', 'Completed'), ('Rejected', 'Rejected')], default='Open', max_length=100)),
                ('actions', models.TextField(blank=True, default='', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='HRWarehouse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_no', models.CharField(max_length=100)),
                ('item_type', models.CharField(max_length=255)),
                ('plate_number', models.CharField(blank=True, max_length=255, null=True)),
                ('last_checkup_date', models.DateField()),
                ('duration_of_checkup', models.IntegerField(help_text='Duration in months')),
                ('end_checkup_date', models.DateField(blank=True, null=True)),
                ('license_last_checkup', models.DateField()),
                ('duration_of_license', models.IntegerField(help_text='Duration in months')),
                ('end_license_date', models.DateField(blank=True, null=True)),
                ('insurance_date_renew', models.DateField()),
                ('duration_of_insurance', models.IntegerField(help_text='Duration in months')),
                ('end_insurance_date', models.DateField(blank=True, null=True)),
                ('location', models.CharField(max_length=255)),
                ('traffic_violation_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('traffic_violation_attachment', models.FileField(blank=True, null=True, upload_to='hr_warehouse/traffic_violations/')),
                ('car_photo', models.ImageField(blank=True, null=True, upload_to='hr_warehouse/car_photos/')),
                ('license_attachment', models.FileField(blank=True, null=True, upload_to='hr_warehouse/license_attachments/')),
                ('checkup_attachment', models.FileField(blank=True, null=True, upload_to='hr_warehouse/checkup_attachments/')),
                ('insurance_attachment', models.FileField(blank=True, null=True, upload_to='hr_warehouse/insurance_attachments/')),
                ('driver_id_attachment', models.FileField(blank=True, null=True, upload_to='hr_warehouse/driver_id_attachments/')),
                ('driver_license_attachment', models.FileField(blank=True, null=True, upload_to='hr_warehouse/driver_license_attachments/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('current_driver', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='current_driver', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='HealthSafety',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FinancialWarehouseRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requested_quantity', models.PositiveIntegerField()),
                ('reason_for_leaving', models.TextField()),
                ('request_use', models.CharField(choices=[('Permanent', 'Permanent use in project'), ('Temporary', 'Temporary usage')], max_length=50)),
                ('applied_at', models.DateTimeField(auto_now_add=True)),
                ('signature', models.ImageField(blank=True, null=True, upload_to='signatures/')),
                ('applied_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.financialwarehouse')),
                ('using_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.department')),
            ],
        ),
        migrations.CreateModel(
            name='FinancialAdvance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('reason', models.TextField()),
                ('date_issued', models.DateField(default=django.utils.timezone.now)),
                ('repayment_date', models.DateField()),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ERPPurchaseOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_date', models.DateField(default=django.utils.timezone.now)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.contractor')),
            ],
        ),
        migrations.CreateModel(
            name='ERPInvoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_number', models.CharField(max_length=100)),
                ('invoice_date', models.DateField(default=django.utils.timezone.now)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(max_length=255)),
                ('purchase_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.erppurchaseorder')),
            ],
        ),
        migrations.CreateModel(
            name='ERPEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EndOfServiceReward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('date_issued', models.DateField(default=django.utils.timezone.now)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_no', models.CharField(editable=False, max_length=100, unique=True)),
                ('profession', models.CharField(blank=True, max_length=100, null=True)),
                ('iqama_id_no', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(max_length=255)),
                ('date_of_birth', models.DateField()),
                ('nationality', models.CharField(max_length=255)),
                ('passport_no', models.CharField(max_length=255)),
                ('name_on_passport', models.CharField(max_length=255)),
                ('phone_number_ksa', models.CharField(max_length=10)),
                ('relative_name', models.CharField(max_length=255)),
                ('relative_phone_number', models.CharField(max_length=15)),
                ('id_renew_date', models.DateField()),
                ('duration', models.IntegerField()),
                ('id_end_date', models.DateField(blank=True, null=True)),
                ('id_attachment', models.FileField(blank=True, null=True, upload_to='employee_details/id_attachments/')),
                ('passport_attachment', models.FileField(blank=True, null=True, upload_to='employee_details/passport_attachments/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_employees', to=settings.AUTH_USER_MODEL)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.department')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employee_details', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeAllowance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allowance_type', models.CharField(max_length=255)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('frequency', models.CharField(choices=[('Monthly', 'Monthly'), ('Annually', 'Annually')], max_length=50)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CRMTicket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('status', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CRMLead',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=255)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.crmcustomer')),
            ],
        ),
        migrations.CreateModel(
            name='AdministrativeRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admin_request_nu', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='Request Number')),
                ('admin_request_company', models.CharField(choices=[('SBG', 'SBG'), ('HIC', 'HIC')], max_length=3)),
                ('admin_request_type', models.CharField(choices=[('Leave on Vacation Request', 'Leave on Vacation Request'), ('Exit and Return Visa', 'Exit and Return Visa'), ('National ID / Iqama', 'National ID / Iqama'), ('Passport', 'Passport'), ('Profession Edit', 'Profession Edit'), ('Passport Department gov', 'Passport Department gov'), ('Employment Letter', 'Employment Letter'), ('Receive Vehicle', 'Receive Vehicle')], max_length=50)),
                ('national_id', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('department', models.CharField(max_length=255)),
                ('explanation_of_request', models.CharField(choices=[('Vacation Leave', 'Vacation Leave'), ('Business Travel', 'Business Travel'), ('Training Request', 'Training Request'), ('Equipment Request', 'Equipment Request'), ('Work Permit Renewal', 'Work Permit Renewal'), ('Salary Certificate', 'Salary Certificate'), ('Other', 'Other')], max_length=50)),
                ('notes', models.TextField(blank=True, null=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('signature', models.ImageField(blank=True, null=True, upload_to='signatures/')),
                ('manager_approval_status', models.CharField(choices=[('Open', 'Open'), ('Accepted', 'Accepted'), ('Rejected', 'Rejected')], default='Open', max_length=10, verbose_name='Manager Approval')),
                ('gm_approval_status', models.CharField(choices=[('Open', 'Open'), ('Accepted', 'Accepted'), ('Rejected', 'Rejected')], default='Open', max_length=10, verbose_name='GM Approval')),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('In Progress', 'In Progress'), ('Completed', 'Completed'), ('Rejected', 'Rejected')], default='Pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='administrative_requests', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AccountingEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('description', models.TextField()),
                ('debit', models.DecimalField(decimal_places=2, max_digits=10)),
                ('credit', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.account')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='customuser',
            name='department',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.department', verbose_name='Department'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='custom_user_set', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='position',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.position', verbose_name='Position'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='roles',
            field=models.ManyToManyField(blank=True, related_name='users', to='core.role', verbose_name='Roles'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='custom_user_set', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.CreateModel(
            name='ClearanceSignature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('signature', models.ImageField(upload_to='signatures/')),
                ('approval_note', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('Approved', 'Approved'), ('Rejected', 'Rejected')], max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('clearance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='signatures', to='core.companyclearance')),
                ('manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('clearance', 'manager')},
            },
        ),
    ]
